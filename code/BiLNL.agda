module BiLNL where

open import nat renaming (_+_ to _+‚Ñï_)
open import snoc renaming ([_] to [_]L ; _++_ to _++L_; _::_ to _::L_)
open import list renaming ([_] to [_]R ; _++_ to _++R_; _::_ to _::R_)
open import product hiding (_√ó_)
open import empty
open import unit
open import bool

World : Set
World = ‚Ñï
  
Graph : Set
Graph = Snoc (World ‚àß World)

_‚ü®_‚ü©_ : World ‚Üí Graph ‚Üí World ‚Üí Set
w‚ÇÅ ‚ü® [] ‚ü© w‚ÇÇ = ‚ä•
w‚ÇÅ ‚ü® G ::L (a , b) ‚ü© w‚ÇÇ with a =‚Ñï w‚ÇÅ | b =‚Ñï w‚ÇÇ
w‚ÇÅ ‚ü® G ::L (a , b) ‚ü© w‚ÇÇ | tt | tt = ‚ä§
w‚ÇÅ ‚ü® G ::L (a , b) ‚ü© w‚ÇÇ | _ | _ = ‚ä•

worldInGr : World ‚Üí Graph ‚Üí Set
worldInGr w [] = ‚ä•
worldInGr w (G ::L (w‚ÇÅ , w‚ÇÇ)) with w =‚Ñï w‚ÇÅ | w =‚Ñï w‚ÇÇ
... | tt | _ = ‚ä§
... | _ | tt = ‚ä§
... | _ | _ = worldInGr w G

_=W_ : World ‚Üí World ‚Üí Set
w‚ÇÅ =W w‚ÇÇ with w‚ÇÅ =‚Ñï w‚ÇÇ
... | tt = ‚ä§
... | ff = ‚ä•

mutual
  -- Intuitionistic formulas:
  data I-Form : Set where
    One : I-Form
    _√ó_ : I-Form ‚Üí I-Form ‚Üí I-Form
    _‚áí_ : I-Form ‚Üí I-Form ‚Üí I-Form
    G   : BiL-Form ‚Üí I-Form

  -- Co-intuitionistic formulas:
  data C-Form : Set where
    Zero : C-Form
    _+_ : C-Form ‚Üí C-Form ‚Üí C-Form
    _‚â∫_ : C-Form ‚Üí C-Form ‚Üí C-Form
    H   : BiL-Form ‚Üí C-Form

  -- Bi-intuitionistic Linear Formulas:
  data BiL-Form : Set where
    True : BiL-Form
    False : BiL-Form
    F : I-Form ‚Üí BiL-Form
    J : C-Form ‚Üí BiL-Form    
    _‚äó_ : BiL-Form ‚Üí BiL-Form ‚Üí BiL-Form
    _‚äï_ : BiL-Form ‚Üí BiL-Form ‚Üí BiL-Form
    _‚ä∏_ : BiL-Form ‚Üí BiL-Form ‚Üí BiL-Form
    _‚â∫L_ : BiL-Form ‚Üí BiL-Form ‚Üí BiL-Form

-- Intuitionistic contexts:
I-Ctx : Set
I-Ctx = Snoc (World ‚àß I-Form)

worldInICtx : World ‚Üí I-Ctx ‚Üí Set
worldInICtx = inPairSnocFst _=‚Ñï_

-- Co-intuitionistic contexts:
C-Ctx : Set
C-Ctx = ùïÉ (World ‚àß C-Form)

worldInCCtx : World ‚Üí C-Ctx ‚Üí Set
worldInCCtx w c = inPairListFst _=‚Ñï_ w c

-- Bi-intuitionistic left and right contexts:
BiL-LCtx : Set
BiL-LCtx = Snoc (World ‚àß BiL-Form)

BiL-RCtx : Set
BiL-RCtx = ùïÉ (World ‚àß BiL-Form)

worldInBiLLCtx : World ‚Üí BiL-LCtx ‚Üí Set
worldInBiLLCtx = inPairSnocFst _=‚Ñï_

worldInBiLRCtx : World ‚Üí BiL-RCtx ‚Üí Set
worldInBiLRCtx w c = inPairListFst _=‚Ñï_ w c

-- The inference rules for BiLNL Logic:

mutual
  -- Intuitionistic fragment of BiLNL logic:
  data ‚ü®_‚ü©_‚ä¢I_ : Graph ‚Üí I-Ctx ‚Üí (World ‚àß I-Form) ‚Üí Set where
    I-RL : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{w1 w2 : World}{Y : I-Form}
      ‚Üí ‚ü® Gr ::L (w1 , w1) ‚ü© Œò ‚ä¢I (w2 , Y)
      ‚Üí ‚ü® Gr ‚ü© Œò ‚ä¢I (w2 , Y)

    I-TS : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{w‚ÇÅ w‚ÇÇ w‚ÇÉ w : World}{Y : I-Form}
      ‚Üí w‚ÇÅ ‚ü® Gr ‚ü© w‚ÇÇ
      ‚Üí w‚ÇÇ ‚ü® Gr ‚ü© w‚ÇÉ
      ‚Üí ‚ü® Gr ::L (w‚ÇÅ , w‚ÇÉ) ‚ü© Œò ‚ä¢I (w , Y)
      ‚Üí ‚ü® Gr ‚ü© Œò ‚ä¢I (w , Y)

    I-ID : ‚àÄ{Gr : Graph}{w : World}{Y : I-Form}
      ‚Üí ‚ü® Gr ‚ü© [ (w , Y) ]L ‚ä¢I (w , Y)

    I-Cut : ‚àÄ{Gr : Graph}{Œò‚ÇÅ Œò‚ÇÇ : I-Ctx}{w‚ÇÇ w‚ÇÅ : World}{X Z : I-Form}
      ‚Üí ‚ü® Gr ‚ü© Œò‚ÇÇ ‚ä¢I (w‚ÇÇ , X)
      ‚Üí ‚ü® Gr ‚ü© (Œò‚ÇÅ ::L (w‚ÇÇ , X)) ‚ä¢I (w‚ÇÅ , Z)
      ‚Üí ‚ü® Gr ‚ü© (Œò‚ÇÅ ++L Œò‚ÇÇ) ‚ä¢I (w‚ÇÅ , Z)

    I-WK : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{w‚ÇÅ w‚ÇÇ : World}{X Y : I-Form}
      ‚Üí ‚ü® Gr ‚ü© Œò ‚ä¢I (w‚ÇÅ , Y)
      ‚Üí ‚ü® Gr ‚ü© (Œò ::L (w‚ÇÇ , X)) ‚ä¢I (w‚ÇÅ , Y)

    I-CR : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{w‚ÇÅ w‚ÇÇ : World}{X Y : I-Form}
      ‚Üí ‚ü® Gr ‚ü© (Œò ::L (w‚ÇÇ , X) ::L (w‚ÇÇ , X)) ‚ä¢I (w‚ÇÅ , Y)
      ‚Üí ‚ü® Gr ‚ü© (Œò ::L (w‚ÇÇ , X)) ‚ä¢I (w‚ÇÅ , Y)

    I-EX : ‚àÄ{Gr : Graph}{Œò‚ÇÅ Œò‚ÇÇ : I-Ctx}{w‚ÇÅ w‚ÇÇ w : World}{X Y Z : I-Form}
      ‚Üí ‚ü® Gr ‚ü© ((Œò‚ÇÅ ::L (w‚ÇÇ , Y) ::L (w‚ÇÅ , X)) ++L Œò‚ÇÇ) ‚ä¢I (w , Z)
      ‚Üí ‚ü® Gr ‚ü© ((Œò‚ÇÅ ::L (w‚ÇÅ , X) ::L (w‚ÇÇ , Y)) ++L Œò‚ÇÇ) ‚ä¢I (w , Z)

    I-ML : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{w‚ÇÅ w‚ÇÇ w : World}{X Y : I-Form}
      ‚Üí w‚ÇÅ ‚ü® Gr ‚ü© w‚ÇÇ
      ‚Üí ‚ü® Gr ‚ü© (Œò ::L (w‚ÇÅ , X) ::L (w‚ÇÇ , X)) ‚ä¢I (w , Y)
      ‚Üí ‚ü® Gr ‚ü© ((Œò ::L (w‚ÇÅ , X))) ‚ä¢I (w , Y)

    I-MR : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{w‚ÇÅ w‚ÇÇ : World}{Y : I-Form}
      ‚Üí w‚ÇÇ ‚ü® Gr ‚ü© w‚ÇÅ
      ‚Üí ‚ü® Gr ‚ü© Œò ‚ä¢I (w‚ÇÇ , Y)
      ‚Üí ‚ü® Gr ‚ü© Œò ‚ä¢I (w‚ÇÅ , Y)

    I-TL : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{w‚ÇÅ w‚ÇÇ : World}{Y : I-Form}
      ‚Üí ‚ü® Gr ‚ü© Œò ‚ä¢I (w‚ÇÅ , Y)
      ‚Üí ‚ü® Gr ‚ü© (Œò ::L (w‚ÇÇ , One)) ‚ä¢I (w‚ÇÅ , Y)

    I-TR : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{w : World}{Y : I-Form}
      ‚Üí ‚ü® Gr ‚ü© Œò ‚ä¢I (w , One)

    I-PL : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{w‚ÇÅ w‚ÇÇ : World}{X Y Z : I-Form}
      ‚Üí ‚ü® Gr ‚ü© (Œò ::L (w‚ÇÅ , X) ::L (w‚ÇÅ , Y)) ‚ä¢I (w‚ÇÇ , Z)
      ‚Üí ‚ü® Gr ‚ü© (Œò ::L (w‚ÇÅ , X √ó Y)) ‚ä¢I (w‚ÇÇ , Z)

    I-PR : ‚àÄ{Gr : Graph}{Œò‚ÇÅ Œò‚ÇÇ : I-Ctx}{w : World}{X Y : I-Form}
      ‚Üí ‚ü® Gr ‚ü© Œò‚ÇÅ ‚ä¢I (w , X)
      ‚Üí ‚ü® Gr ‚ü© Œò‚ÇÇ ‚ä¢I (w , Y)
      ‚Üí ‚ü® Gr ‚ü© (Œò‚ÇÅ ++L Œò‚ÇÇ) ‚ä¢I (w , X √ó Y)

    I-IL : ‚àÄ{Gr : Graph}{Œò‚ÇÅ Œò‚ÇÇ : I-Ctx}{w‚ÇÅ w‚ÇÇ w : World}{X Y Z : I-Form}
      ‚Üí w‚ÇÅ ‚ü® Gr ‚ü© w‚ÇÇ
      ‚Üí ‚ü® Gr ‚ü© Œò‚ÇÇ ‚ä¢I (w‚ÇÇ , X)
      ‚Üí ‚ü® Gr ‚ü© (Œò‚ÇÅ ::L (w‚ÇÇ , Y)) ‚ä¢I (w , Z)
      ‚Üí ‚ü® Gr ‚ü© (Œò‚ÇÅ ++L Œò‚ÇÇ ::L (w‚ÇÅ , X ‚áí Y)) ‚ä¢I (w , Z)

    I-IR : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{w‚ÇÅ w‚ÇÇ : World}{X Y : I-Form}
      ‚Üí ((worldInGr w‚ÇÇ Gr) ‚Üí ‚ä•)
      ‚Üí ((worldInICtx w‚ÇÇ Œò) ‚Üí ‚ä•)
      ‚Üí ((w‚ÇÅ =W w‚ÇÇ) ‚Üí ‚ä•)
      ‚Üí ‚ü® Gr ::L (w‚ÇÅ , w‚ÇÇ) ‚ü© (Œò ::L (w‚ÇÇ , X)) ‚ä¢I (w‚ÇÇ , Y)
      ‚Üí ‚ü® Gr ‚ü© Œò ‚ä¢I (w‚ÇÅ , X ‚áí Y)

    I-GR : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{w : World}{A : BiL-Form}
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ [] ‚ä¢LL [ (w , A) ]R ‚à£ []
      ‚Üí ‚ü® Gr ‚ü© Œò ‚ä¢I (w , (G A)) 

  -- Co-intuitionistic fragment of BiLNL logic:
  data ‚ü®_‚ü©_‚ä¢C_ : Graph ‚Üí (World ‚àß C-Form) ‚Üí C-Ctx ‚Üí Set where
    C-RL : ‚àÄ{Gr : Graph}{Œ® : C-Ctx}{w‚ÇÅ w‚ÇÇ : World}{S : C-Form}
      ‚Üí ‚ü® Gr ::L (w‚ÇÅ , w‚ÇÅ) ‚ü© (w‚ÇÇ , S) ‚ä¢C Œ®
      ‚Üí ‚ü® Gr ‚ü© (w‚ÇÇ , S) ‚ä¢C Œ®

    C-TS : ‚àÄ{Gr : Graph}{Œ® : C-Ctx}{w‚ÇÅ w‚ÇÇ w‚ÇÉ w : World}{S : C-Form}
      ‚Üí w‚ÇÅ ‚ü® Gr ‚ü© w‚ÇÇ
      ‚Üí w‚ÇÇ ‚ü® Gr ‚ü© w‚ÇÉ
      ‚Üí ‚ü® Gr ::L (w‚ÇÅ , w‚ÇÉ) ‚ü© (w , S) ‚ä¢C Œ®
      ‚Üí ‚ü® Gr ‚ü© (w , S) ‚ä¢C Œ®

    C-ID : ‚àÄ{Gr : Graph}{w : World}{S : C-Form}
      ‚Üí ‚ü® Gr ‚ü© (w , S) ‚ä¢C [ (w , S) ]R

    C-Cut : ‚àÄ{Gr : Graph}{Œ®‚ÇÅ Œ®‚ÇÇ : C-Ctx}{w‚ÇÅ w‚ÇÇ : World}{S T : C-Form}
      ‚Üí ‚ü® Gr ‚ü© (w‚ÇÅ , S) ‚ä¢C ((w‚ÇÇ , T) ::R Œ®‚ÇÇ)
      ‚Üí ‚ü® Gr ‚ü© (w‚ÇÇ , T) ‚ä¢C Œ®‚ÇÅ      
      ‚Üí ‚ü® Gr ‚ü© (w‚ÇÅ , S) ‚ä¢C (Œ®‚ÇÅ ++R Œ®‚ÇÇ)

    C-WK : ‚àÄ{Gr : Graph}{Œ® : C-Ctx}{w‚ÇÅ w‚ÇÇ : World}{S T : C-Form}
      ‚Üí ‚ü® Gr ‚ü© (w‚ÇÅ , S) ‚ä¢C Œ®
      ‚Üí ‚ü® Gr ‚ü© (w‚ÇÅ , S) ‚ä¢C ((w‚ÇÇ , T) ::R Œ®)

    C-CR : ‚àÄ{Gr : Graph}{Œ® : C-Ctx}{w‚ÇÅ w‚ÇÇ : World}{S T : C-Form}
      ‚Üí ‚ü® Gr ‚ü© (w‚ÇÅ , S) ‚ä¢C ((w‚ÇÇ , T) ::R (w‚ÇÇ , T) ::R Œ®)
      ‚Üí ‚ü® Gr ‚ü© (w‚ÇÅ , S) ‚ä¢C ((w‚ÇÇ , T) ::R Œ®)

    C-EX : ‚àÄ{Gr : Graph}{Œ®‚ÇÅ Œ®‚ÇÇ : C-Ctx}{w‚ÇÅ w‚ÇÇ w : World}{R S T : C-Form}
      ‚Üí ‚ü® Gr ‚ü© (w , R) ‚ä¢C (Œ®‚ÇÅ ++R (w‚ÇÅ , S) ::R (w‚ÇÇ , T) ::R Œ®‚ÇÇ)
      ‚Üí ‚ü® Gr ‚ü© (w , R) ‚ä¢C (Œ®‚ÇÅ ++R (w‚ÇÇ , T) ::R (w‚ÇÅ , S) ::R Œ®‚ÇÇ)

    C-ML : ‚àÄ{Gr : Graph}{Œ® : C-Ctx}{w‚ÇÅ w‚ÇÇ : World}{S : C-Form}
      ‚Üí w‚ÇÅ ‚ü® Gr ‚ü© w‚ÇÇ
      ‚Üí ‚ü® Gr ‚ü© (w‚ÇÇ , S) ‚ä¢C Œ®
      ‚Üí ‚ü® Gr ‚ü© (w‚ÇÅ , S) ‚ä¢C Œ®

    C-MR : ‚àÄ{Gr : Graph}{Œ® : C-Ctx}{w‚ÇÅ w‚ÇÇ w : World}{S T : C-Form}
      ‚Üí w‚ÇÇ ‚ü® Gr ‚ü© w‚ÇÅ
      ‚Üí ‚ü® Gr ‚ü© (w , S) ‚ä¢C ((w‚ÇÇ , T) ::R (w‚ÇÅ , T) ::R Œ®)
      ‚Üí ‚ü® Gr ‚ü© (w , S) ‚ä¢C ((w‚ÇÅ , T) ::R Œ®)

    C-FL : ‚àÄ{Gr : Graph}{Œ® : C-Ctx}{w : World}
      ‚Üí ‚ü® Gr ‚ü© (w , Zero) ‚ä¢C Œ®

    C-FR : ‚àÄ{Gr : Graph}{Œ® : C-Ctx}{w‚ÇÅ w‚ÇÇ : World}{S : C-Form}
      ‚Üí ‚ü® Gr ‚ü© (w‚ÇÅ , S) ‚ä¢C Œ®
      ‚Üí ‚ü® Gr ‚ü© (w‚ÇÅ , S) ‚ä¢C ((w‚ÇÇ , Zero) ::R Œ®)

    C-DL : ‚àÄ{Gr : Graph}{Œ®‚ÇÅ Œ®‚ÇÇ : C-Ctx}{w : World}{S T : C-Form}
      ‚Üí ‚ü® Gr ‚ü© (w , S) ‚ä¢C Œ®‚ÇÅ
      ‚Üí ‚ü® Gr ‚ü© (w , T) ‚ä¢C Œ®‚ÇÇ
      ‚Üí ‚ü® Gr ‚ü© (w , S + T) ‚ä¢C (Œ®‚ÇÅ ++R Œ®‚ÇÇ)

    C-DR : ‚àÄ{Gr : Graph}{Œ® : C-Ctx}{w‚ÇÅ w‚ÇÇ : World}{R S T : C-Form}
      ‚Üí ‚ü® Gr ‚ü© (w‚ÇÅ , R) ‚ä¢C ((w‚ÇÇ , S) ::R (w‚ÇÇ , T) ::R Œ®)
      ‚Üí ‚ü® Gr ‚ü© (w‚ÇÅ , R) ‚ä¢C ((w‚ÇÇ , S + T) ::R Œ®)

    C-SL : ‚àÄ{Gr : Graph}{Œ® : C-Ctx}{w‚ÇÅ w‚ÇÇ : World}{S T : C-Form}
      ‚Üí ((worldInGr w‚ÇÇ Gr) ‚Üí ‚ä•)
      ‚Üí ((worldInCCtx w‚ÇÇ Œ®) ‚Üí ‚ä•)
      ‚Üí ((w‚ÇÅ =W w‚ÇÇ) ‚Üí ‚ä•)
      ‚Üí ‚ü® Gr ::L (w‚ÇÇ , w‚ÇÅ) ‚ü© (w‚ÇÇ , S) ‚ä¢C ((w‚ÇÇ , T) ::R Œ®)
      ‚Üí ‚ü® Gr ‚ü© (w‚ÇÅ , S ‚â∫ T) ‚ä¢C Œ®

    C-SR : ‚àÄ{Gr : Graph}{Œ®‚ÇÅ Œ®‚ÇÇ : C-Ctx}{w‚ÇÅ w‚ÇÇ w : World}{R S T : C-Form}
      ‚Üí w‚ÇÇ ‚ü® Gr ‚ü© w‚ÇÅ
      ‚Üí ‚ü® Gr ‚ü© (w , R) ‚ä¢C ((w‚ÇÇ , S) ::R Œ®‚ÇÇ)
      ‚Üí ‚ü® Gr ‚ü© (w‚ÇÇ , T) ‚ä¢C Œ®‚ÇÅ
      ‚Üí ‚ü® Gr ‚ü© (w , R) ‚ä¢C ((w‚ÇÅ , S ‚â∫ T) ::R Œ®‚ÇÅ ++R Œ®‚ÇÇ)

    C-HL : ‚àÄ{Gr : Graph}{Œ® : C-Ctx}{w : World}{A : BiL-Form}
      ‚Üí ‚ü® Gr ‚ü© [] ‚à£ [ (w , A) ]L ‚ä¢LL [] ‚à£ Œ®
      ‚Üí ‚ü® Gr ‚ü© (w , H A) ‚ä¢C Œ®

  -- Linear Core of BiLNL logic:
  data ‚ü®_‚ü©_‚à£_‚ä¢LL_‚à£_ : Graph ‚Üí I-Ctx ‚Üí BiL-LCtx ‚Üí BiL-RCtx ‚Üí C-Ctx ‚Üí Set where
  -- Abstract Kripke Graph Rules:
    LL-RL : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{Œì : BiL-LCtx}{Œî : BiL-RCtx}{Œ® : C-Ctx}{w : World}
      ‚Üí ‚ü® Gr ::L (w , w) ‚ü© Œò ‚à£ Œì ‚ä¢LL Œî ‚à£ Œ®
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ Œì ‚ä¢LL Œî ‚à£ Œ®

    LL-TS : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{Œì : BiL-LCtx}{Œî : BiL-RCtx}{Œ® : C-Ctx}{w‚ÇÅ w‚ÇÇ w‚ÇÉ : World}
      ‚Üí w‚ÇÅ ‚ü® Gr ‚ü© w‚ÇÇ
      ‚Üí w‚ÇÇ ‚ü® Gr ‚ü© w‚ÇÉ
      ‚Üí ‚ü® Gr ::L (w‚ÇÅ , w‚ÇÉ) ‚ü© Œò ‚à£ Œì ‚ä¢LL Œî ‚à£ Œ®
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ Œì ‚ä¢LL Œî ‚à£ Œ®

    LL-ML : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{Œì : BiL-LCtx}{Œî : BiL-RCtx}{Œ® : C-Ctx}{w‚ÇÅ w‚ÇÇ : World}{A : BiL-Form}
      ‚Üí w‚ÇÅ ‚ü® Gr ‚ü© w‚ÇÇ
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ (Œì ::L (w‚ÇÅ , A) ::L (w‚ÇÇ , A)) ‚ä¢LL Œî ‚à£ Œ®
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ (Œì ::L (w‚ÇÅ , A)) ‚ä¢LL Œî ‚à£ Œ®

    LL-MR : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{Œì : BiL-LCtx}{Œî : BiL-RCtx}{Œ® : C-Ctx}{w‚ÇÅ w‚ÇÇ : World}{A : BiL-Form}
      ‚Üí w‚ÇÇ ‚ü® Gr ‚ü© w‚ÇÅ
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ Œì ‚ä¢LL ((w‚ÇÇ , A) ::R (w‚ÇÅ , A) ::R Œî) ‚à£ Œ®
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ Œì ‚ä¢LL ((w‚ÇÅ , A) ::R Œî) ‚à£ Œ®

    LL-IML : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{Œì : BiL-LCtx}{Œî : BiL-RCtx}{Œ® : C-Ctx}{w‚ÇÅ w‚ÇÇ : World}{X : I-Form}
      ‚Üí w‚ÇÅ ‚ü® Gr ‚ü© w‚ÇÇ
      ‚Üí ‚ü® Gr ‚ü© (Œò ::L (w‚ÇÅ , X) ::L (w‚ÇÇ , X)) ‚à£ Œì ‚ä¢LL Œî ‚à£ Œ®
      ‚Üí ‚ü® Gr ‚ü© (Œò ::L (w‚ÇÅ , X)) ‚à£ Œì ‚ä¢LL Œî ‚à£ Œ®

    LL-CMR : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{Œì : BiL-LCtx}{Œî : BiL-RCtx}{Œ® : C-Ctx}{w‚ÇÅ w‚ÇÇ : World}{S : C-Form}
      ‚Üí w‚ÇÇ ‚ü® Gr ‚ü© w‚ÇÅ
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ Œì ‚ä¢LL Œî ‚à£ ((w‚ÇÇ , S) ::R (w‚ÇÅ , S) ::R Œ®)
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ Œì ‚ä¢LL Œî ‚à£ ((w‚ÇÅ , S) ::R Œ®)

  -- Structural Rules:
    LL-WKL : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{Œì : BiL-LCtx}{Œî : BiL-RCtx}{Œ® : C-Ctx}{w : World}{X : I-Form}
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ Œì ‚ä¢LL Œî ‚à£ Œ®
      ‚Üí ‚ü® Gr ‚ü© (Œò ::L (w , X)) ‚à£ Œì ‚ä¢LL Œî ‚à£ Œ®

    LL-WKR : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{Œì : BiL-LCtx}{Œî : BiL-RCtx}{Œ® : C-Ctx}{w : World}{S : C-Form}
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ Œì ‚ä¢LL Œî ‚à£ Œ®
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ Œì ‚ä¢LL Œî ‚à£ ((w , S) ::R Œ®)

    LL-CTRL : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{Œì : BiL-LCtx}{Œî : BiL-RCtx}{Œ® : C-Ctx}{w : World}{X : I-Form}
      ‚Üí ‚ü® Gr ‚ü© (Œò ::L (w , X) ::L (w , X)) ‚à£ Œì ‚ä¢LL Œî ‚à£ Œ®
      ‚Üí ‚ü® Gr ‚ü© (Œò ::L (w , X)) ‚à£ Œì ‚ä¢LL Œî ‚à£ Œ®

    LL-CTRR : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{Œì : BiL-LCtx}{Œî : BiL-RCtx}{Œ® : C-Ctx}{w : World}{S : C-Form}
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ Œì ‚ä¢LL Œî ‚à£ ((w , S) ::R (w , S) ::R Œ®)
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ Œì ‚ä¢LL Œî ‚à£ ((w , S) ::R Œ®)

    LL-EXL : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{Œì‚ÇÅ Œì‚ÇÇ : BiL-LCtx}{Œî : BiL-RCtx}{Œ® : C-Ctx}{w‚ÇÅ w‚ÇÇ : World}{A B : BiL-Form}
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ ((Œì‚ÇÅ ::L (w‚ÇÅ , A) ::L (w‚ÇÇ , B)) ++L Œì‚ÇÇ) ‚ä¢LL Œî ‚à£ Œ®
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ ((Œì‚ÇÅ ::L (w‚ÇÇ , B) ::L (w‚ÇÅ , A)) ++L Œì‚ÇÇ) ‚ä¢LL Œî ‚à£ Œ®

    LL-EXR : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{Œì : BiL-LCtx}{Œî‚ÇÅ Œî‚ÇÇ : BiL-RCtx}{Œ® : C-Ctx}{w‚ÇÅ w‚ÇÇ : World}{A B : BiL-Form}
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ Œì ‚ä¢LL (Œî‚ÇÅ ++R ((w‚ÇÅ , A) ::R (w‚ÇÇ , B) ::R Œî‚ÇÇ)) ‚à£ Œ®
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ Œì ‚ä¢LL (Œî‚ÇÅ ++R ((w‚ÇÇ , B) ::R (w‚ÇÅ , A) ::R Œî‚ÇÇ)) ‚à£ Œ®

    LL-IEXL : ‚àÄ{Gr : Graph}{Œò‚ÇÅ Œò‚ÇÇ : I-Ctx}{Œì : BiL-LCtx}{Œî : BiL-RCtx}{Œ® : C-Ctx}{w‚ÇÅ w‚ÇÇ : World}{X Y : I-Form}
      ‚Üí ‚ü® Gr ‚ü© ((Œò‚ÇÅ ::L (w‚ÇÅ , X) ::L (w‚ÇÇ , Y)) ++L Œò‚ÇÇ) ‚à£ Œì ‚ä¢LL Œî ‚à£ Œ®
      ‚Üí ‚ü® Gr ‚ü© ((Œò‚ÇÅ ::L (w‚ÇÇ , Y) ::L (w‚ÇÅ , X)) ++L Œò‚ÇÇ) ‚à£ Œì ‚ä¢LL Œî ‚à£ Œ®

    LL-CEXR : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{Œì : BiL-LCtx}{Œî : BiL-RCtx}{Œ®‚ÇÅ Œ®‚ÇÇ : C-Ctx}{w‚ÇÅ w‚ÇÇ : World}{S T : C-Form}
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ Œì ‚ä¢LL Œî ‚à£ (Œ®‚ÇÅ ++R ((w‚ÇÅ , S) ::R (w‚ÇÇ , T) ::R Œ®‚ÇÇ))
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ Œì ‚ä¢LL Œî ‚à£ (Œ®‚ÇÅ ++R ((w‚ÇÇ , T) ::R (w‚ÇÅ , S) ::R Œ®‚ÇÇ))

    LL-ID : ‚àÄ{Gr : Graph}{w : World}{A : BiL-Form}
      ‚Üí ‚ü® Gr ‚ü© [] ‚à£ [ (w , A) ]L ‚ä¢LL [ (w , A) ]R ‚à£ []

    LL-Cut : ‚àÄ{Gr : Graph}{Œò‚ÇÅ Œò‚ÇÇ : I-Ctx}{Œì‚ÇÅ Œì‚ÇÇ : BiL-LCtx}{Œî‚ÇÅ Œî‚ÇÇ : BiL-RCtx}{Œ®‚ÇÅ Œ®‚ÇÇ : C-Ctx}{w : World}{A : BiL-Form}
      ‚Üí ‚ü® Gr ‚ü© Œò‚ÇÅ ‚à£ Œì‚ÇÇ ‚ä¢LL ((w , A) ::R Œî‚ÇÇ) ‚à£ Œ®‚ÇÅ
      ‚Üí ‚ü® Gr ‚ü© Œò‚ÇÇ ‚à£ (Œì‚ÇÅ ::L (w , A)) ‚ä¢LL Œî‚ÇÅ ‚à£ Œ®‚ÇÇ
      ‚Üí ‚ü® Gr ‚ü© (Œò‚ÇÅ ++L Œò‚ÇÇ) ‚à£ (Œì‚ÇÅ ++L Œì‚ÇÇ) ‚ä¢LL (Œî‚ÇÅ ++R Œî‚ÇÇ) ‚à£ (Œ®‚ÇÅ ++R Œ®‚ÇÇ)

    LL-ICut : ‚àÄ{Gr : Graph}{Œò‚ÇÅ Œò‚ÇÇ : I-Ctx}{Œì : BiL-LCtx}{Œî : BiL-RCtx}{Œ® : C-Ctx}{w : World}{X : I-Form}
      ‚Üí ‚ü® Gr ‚ü© Œò‚ÇÇ ‚ä¢I (w , X)
      ‚Üí ‚ü® Gr ‚ü© (Œò‚ÇÅ ::L (w , X)) ‚à£ Œì ‚ä¢LL Œî ‚à£ Œ®
      ‚Üí ‚ü® Gr ‚ü© (Œò‚ÇÅ ++L Œò‚ÇÇ) ‚à£ Œì ‚ä¢LL Œî ‚à£ Œ®

    LL-CCut : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{Œì : BiL-LCtx}{Œî : BiL-RCtx}{Œ®‚ÇÅ Œ®‚ÇÇ : C-Ctx}{w : World}{S : C-Form}
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ Œì ‚ä¢LL Œî ‚à£ ((w , S) ::R Œ®‚ÇÇ)
      ‚Üí ‚ü® Gr ‚ü© (w , S) ‚ä¢C Œ®‚ÇÅ
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ Œì ‚ä¢LL Œî ‚à£ (Œ®‚ÇÅ ++R Œ®‚ÇÇ)

  -- Conjunction and Tensor Rules:
    LL-IL : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{Œì : BiL-LCtx}{Œî : BiL-RCtx}{Œ® : C-Ctx}{w : World}
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ Œì ‚ä¢LL Œî ‚à£ Œ®
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ (Œì ::L (w , True)) ‚ä¢LL Œî ‚à£ Œ®

    LL-IR : ‚àÄ{Gr : Graph}{w : World}
      ‚Üí ‚ü® Gr ‚ü© [] ‚à£ [] ‚ä¢LL [ (w , True) ]R ‚à£ []

    LL-CL : ‚àÄ{Gr : Graph}{Œò‚ÇÅ Œò‚ÇÇ : I-Ctx}{Œì : BiL-LCtx}{Œî : BiL-RCtx}{Œ® : C-Ctx}{w : World}{X Y : I-Form}
      ‚Üí ‚ü® Gr ‚ü© ((Œò‚ÇÅ ::L (w , X) ::L (w , Y)) ++L Œò‚ÇÇ) ‚à£ Œì ‚ä¢LL Œî ‚à£ Œ®
      ‚Üí ‚ü® Gr ‚ü© ((Œò‚ÇÅ ::L (w , X √ó Y)) ++L Œò‚ÇÇ) ‚à£ Œì ‚ä¢LL Œî ‚à£ Œ®

    LL-TL : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{Œì‚ÇÅ Œì‚ÇÇ : BiL-LCtx}{Œî : BiL-RCtx}{Œ® : C-Ctx}{w : World}{A B : BiL-Form}
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ ((Œì‚ÇÅ ::L (w , A) ::L (w , B)) ++L Œì‚ÇÇ) ‚ä¢LL Œî ‚à£ Œ®
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ ((Œì‚ÇÅ ::L (w , A ‚äó B)) ++L Œì‚ÇÇ) ‚ä¢LL Œî ‚à£ Œ®

    LL-TR : ‚àÄ{Gr : Graph}{Œò‚ÇÅ Œò‚ÇÇ : I-Ctx}{Œì‚ÇÅ Œì‚ÇÇ : BiL-LCtx}{Œî‚ÇÅ Œî‚ÇÇ : BiL-RCtx}{Œ®‚ÇÅ Œ®‚ÇÇ : C-Ctx}{w : World}{A B : BiL-Form}
      ‚Üí ‚ü® Gr ‚ü© Œò‚ÇÅ ‚à£ Œì‚ÇÅ ‚ä¢LL ((w , A) ::R Œî‚ÇÅ) ‚à£ Œ®‚ÇÅ
      ‚Üí ‚ü® Gr ‚ü© Œò‚ÇÇ ‚à£ Œì‚ÇÇ ‚ä¢LL ((w , B) ::R Œî‚ÇÇ) ‚à£ Œ®‚ÇÇ
      ‚Üí ‚ü® Gr ‚ü© (Œò‚ÇÅ ++L Œò‚ÇÇ) ‚à£ (Œì‚ÇÅ ++L Œì‚ÇÇ) ‚ä¢LL ((w , A ‚äó B) ::R (Œî‚ÇÅ ++R Œî‚ÇÇ)) ‚à£ (Œ®‚ÇÅ ++R Œ®‚ÇÇ)
      
  -- Disjunction and Par Rules
    LL-FLL : ‚àÄ{Gr : Graph}{w : World}
      ‚Üí ‚ü® Gr ‚ü© [] ‚à£ [ (w , False) ]L ‚ä¢LL [] ‚à£ []

    LL-FLR : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{Œì : BiL-LCtx}{Œî : BiL-RCtx}{Œ® : C-Ctx}{w : World}
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ Œì ‚ä¢LL Œî ‚à£ Œ®
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ Œì ‚ä¢LL ((w , False) ::R Œî) ‚à£ Œ®

    LL-DR : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{Œì : BiL-LCtx}{Œî : BiL-RCtx}{Œ®‚ÇÅ Œ®‚ÇÇ : C-Ctx}{w : World}{S T : C-Form}
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ Œì ‚ä¢LL Œî ‚à£ (Œ®‚ÇÅ ++R ((w , S) ::R (w , T) ::R Œ®‚ÇÇ))
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ Œì ‚ä¢LL Œî ‚à£ (Œ®‚ÇÅ ++R ((w , S + T) ::R Œ®‚ÇÇ))

    LL-PL : ‚àÄ{Gr : Graph}{Œò‚ÇÅ Œò‚ÇÇ : I-Ctx}{Œì‚ÇÅ Œì‚ÇÇ : BiL-LCtx}{Œî‚ÇÅ Œî‚ÇÇ : BiL-RCtx}{Œ®‚ÇÅ Œ®‚ÇÇ : C-Ctx}{w : World}{A B : BiL-Form}
      ‚Üí ‚ü® Gr ‚ü© Œò‚ÇÅ ‚à£ (Œì‚ÇÅ ::L (w , A)) ‚ä¢LL Œî‚ÇÅ ‚à£ Œ®‚ÇÅ
      ‚Üí ‚ü® Gr ‚ü© Œò‚ÇÇ ‚à£ (Œì‚ÇÇ ::L (w , B)) ‚ä¢LL Œî‚ÇÇ ‚à£ Œ®‚ÇÇ
      ‚Üí ‚ü® Gr ‚ü© (Œò‚ÇÅ ++L Œò‚ÇÇ) ‚à£ ((Œì‚ÇÅ ++L Œì‚ÇÇ) ::L (w , A ‚äï B)) ‚ä¢LL (Œî‚ÇÅ ++R Œî‚ÇÇ) ‚à£ (Œ®‚ÇÅ ++R Œ®‚ÇÇ)

    LL-PR : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{Œì : BiL-LCtx}{Œî‚ÇÅ Œî‚ÇÇ : BiL-RCtx}{Œ® : C-Ctx}{w : World}{A B : BiL-Form}
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ Œì ‚ä¢LL (Œî‚ÇÅ ++R ((w , A) ::R (w , B) ::R Œî‚ÇÇ)) ‚à£ Œ®
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ Œì ‚ä¢LL (Œî‚ÇÅ ++R ((w , A ‚äï B) ::R Œî‚ÇÇ)) ‚à£ Œ®

    LL-ImpL : ‚àÄ{Gr : Graph}{Œò‚ÇÅ Œò‚ÇÇ : I-Ctx}{Œì‚ÇÅ Œì‚ÇÇ : BiL-LCtx}{Œî‚ÇÅ Œî‚ÇÇ : BiL-RCtx}{Œ®‚ÇÅ Œ®‚ÇÇ : C-Ctx}{w‚ÇÅ w‚ÇÇ : World}{A B : BiL-Form}
      ‚Üí w‚ÇÅ ‚ü® Gr ‚ü© w‚ÇÇ
      ‚Üí ‚ü® Gr ‚ü© Œò‚ÇÅ ‚à£ Œì‚ÇÅ ‚ä¢LL ((w‚ÇÇ , A) ::R Œî‚ÇÅ) ‚à£ Œ®‚ÇÅ
      ‚Üí ‚ü® Gr ‚ü© Œò‚ÇÇ ‚à£ (Œì‚ÇÇ ::L (w‚ÇÇ , B)) ‚ä¢LL Œî‚ÇÇ ‚à£ Œ®‚ÇÇ
      ‚Üí ‚ü® Gr ‚ü© (Œò‚ÇÅ ++L Œò‚ÇÇ) ‚à£ ((Œì‚ÇÅ ++L Œì‚ÇÇ) ::L (w‚ÇÅ , A ‚ä∏ B)) ‚ä¢LL (Œî‚ÇÅ ++R Œî‚ÇÇ) ‚à£ (Œ®‚ÇÅ ++R Œ®‚ÇÇ)

    LL-ImpR : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{Œì : BiL-LCtx}{Œî : BiL-RCtx}{Œ® : C-Ctx}{w‚ÇÅ w‚ÇÇ : World}{A B : BiL-Form}
      ‚Üí ((worldInGr w‚ÇÇ Gr) ‚Üí ‚ä•)
      ‚Üí ((worldInICtx w‚ÇÇ Œò) ‚Üí ‚ä•)
      ‚Üí ((worldInBiLLCtx w‚ÇÇ Œì) ‚Üí ‚ä•)
      ‚Üí ((worldInBiLRCtx w‚ÇÇ Œî) ‚Üí ‚ä•)
      ‚Üí ((worldInCCtx w‚ÇÇ Œ®) ‚Üí ‚ä•)
      ‚Üí ((w‚ÇÅ =W w‚ÇÇ) ‚Üí ‚ä•)
      ‚Üí ‚ü® Gr ::L (w‚ÇÅ , w‚ÇÇ) ‚ü© Œò ‚à£ (Œì ::L (w‚ÇÇ , A)) ‚ä¢LL ((w‚ÇÇ , B) ::R Œî) ‚à£ Œ®
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ Œì ‚ä¢LL ((w‚ÇÅ , A ‚ä∏ B) ::R Œî) ‚à£ Œ®      

    LL-IImpL : ‚àÄ{Gr : Graph}{Œò‚ÇÅ Œò‚ÇÇ : I-Ctx}{Œì : BiL-LCtx}{Œî : BiL-RCtx}{Œ® : C-Ctx}{w‚ÇÅ w‚ÇÇ : World}{X Y : I-Form}
      ‚Üí w‚ÇÅ ‚ü® Gr ‚ü© w‚ÇÇ
      ‚Üí ‚ü® Gr ‚ü© Œò‚ÇÅ ‚ä¢I (w‚ÇÇ , X)
      ‚Üí ‚ü® Gr ‚ü© (Œò‚ÇÇ ::L (w‚ÇÇ , Y)) ‚à£ Œì ‚ä¢LL Œî ‚à£ Œ®
      ‚Üí ‚ü® Gr ‚ü© ((Œò‚ÇÅ ++L Œò‚ÇÇ) ::L (w‚ÇÅ , X ‚áí Y)) ‚à£ Œì ‚ä¢LL Œî ‚à£ Œ®

  -- Co-implication Rules:
    LL-SL : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{Œì : BiL-LCtx}{Œî : BiL-RCtx}{Œ® : C-Ctx}{w‚ÇÅ w‚ÇÇ : World}{A B : BiL-Form}
      ‚Üí ((worldInGr w‚ÇÇ Gr) ‚Üí ‚ä•)
      ‚Üí ((worldInICtx w‚ÇÇ Œò) ‚Üí ‚ä•)
      ‚Üí ((worldInBiLLCtx w‚ÇÇ Œì) ‚Üí ‚ä•)
      ‚Üí ((worldInBiLRCtx w‚ÇÇ Œî) ‚Üí ‚ä•)
      ‚Üí ((worldInCCtx w‚ÇÇ Œ®) ‚Üí ‚ä•)
      ‚Üí ((w‚ÇÅ =W w‚ÇÇ) ‚Üí ‚ä•)
      ‚Üí ‚ü® Gr ::L (w‚ÇÇ , w‚ÇÅ) ‚ü© Œò ‚à£ (Œì ::L (w‚ÇÇ , A)) ‚ä¢LL ((w‚ÇÇ , B) ::R Œî) ‚à£ Œ®
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ (Œì ::L (w‚ÇÅ , A ‚â∫L B)) ‚ä¢LL Œî ‚à£ Œ®

    
    LL-SR : ‚àÄ{Gr : Graph}{Œò‚ÇÅ Œò‚ÇÇ : I-Ctx}{Œì‚ÇÅ Œì‚ÇÇ : BiL-LCtx}{Œî‚ÇÅ Œî‚ÇÇ : BiL-RCtx}{Œ®‚ÇÅ Œ®‚ÇÇ : C-Ctx}{w‚ÇÅ w‚ÇÇ : World}{A B : BiL-Form}
      ‚Üí w‚ÇÇ ‚ü® Gr ‚ü© w‚ÇÅ
      ‚Üí ‚ü® Gr ‚ü© Œò‚ÇÅ ‚à£ Œì‚ÇÅ ‚ä¢LL ((w‚ÇÇ , A) ::R Œî‚ÇÅ) ‚à£ Œ®‚ÇÅ
      ‚Üí ‚ü® Gr ‚ü© Œò‚ÇÇ ‚à£ (Œì‚ÇÇ ::L (w‚ÇÇ , B)) ‚ä¢LL Œî‚ÇÇ ‚à£ Œ®‚ÇÇ
      ‚Üí ‚ü® Gr ‚ü© (Œò‚ÇÅ ++L Œò‚ÇÇ) ‚à£ (Œì‚ÇÅ ++L Œì‚ÇÇ) ‚ä¢LL ((w‚ÇÅ , A ‚â∫L B) ::R (Œî‚ÇÅ ++R Œî‚ÇÇ)) ‚à£ (Œ®‚ÇÅ ++R Œ®‚ÇÇ)

    LL-CSR : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{Œì : BiL-LCtx}{Œî : BiL-RCtx}{Œ®‚ÇÅ Œ®‚ÇÇ : C-Ctx}{w‚ÇÅ w‚ÇÇ : World}{S T : C-Form}
      ‚Üí w‚ÇÇ ‚ü® Gr ‚ü© w‚ÇÅ
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ Œì ‚ä¢LL Œî ‚à£ ((w‚ÇÇ , S) ::R Œ®‚ÇÅ)
      ‚Üí ‚ü® Gr ‚ü© (w‚ÇÇ , T) ‚ä¢C Œ®‚ÇÇ
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ Œì ‚ä¢LL Œî ‚à£ ((w‚ÇÅ , S ‚â∫ T) ::R (Œ®‚ÇÅ ++R Œ®‚ÇÇ))

  -- Adjoint Functors Rules
    LL-FL : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{Œì : BiL-LCtx}{Œî : BiL-RCtx}{Œ® : C-Ctx}{w : World}{X : I-Form}
      ‚Üí ‚ü® Gr ‚ü© (Œò ::L (w , X)) ‚à£ Œì ‚ä¢LL Œî ‚à£ Œ®
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ (Œì ::L (w , F X)) ‚ä¢LL Œî ‚à£ Œ®

    LL-FR : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{w : World}{X : I-Form}
      ‚Üí ‚ü® Gr ‚ü© Œò ‚ä¢I (w , X)
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ [] ‚ä¢LL [ (w , F X) ]R ‚à£ []

    LL-JL : ‚àÄ{Gr : Graph}{Œ® : C-Ctx}{w : World}{S : C-Form}
      ‚Üí ‚ü® Gr ‚ü© (w , S) ‚ä¢C Œ®
      ‚Üí ‚ü® Gr ‚ü© [] ‚à£ [ (w , J S) ]L ‚ä¢LL [] ‚à£ Œ®

    LL-JR : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{Œì : BiL-LCtx}{Œî : BiL-RCtx}{Œ® : C-Ctx}{w : World}{S : C-Form}
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ Œì ‚ä¢LL Œî ‚à£ ((w , S) ::R Œ®)
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ Œì ‚ä¢LL ((w , J S) ::R Œî) ‚à£ Œ®

    LL-GL : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{Œì : BiL-LCtx}{Œî : BiL-RCtx}{Œ® : C-Ctx}{w : World}{A : BiL-Form}
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ (Œì ::L (w , A)) ‚ä¢LL Œî ‚à£ Œ®
      ‚Üí ‚ü® Gr ‚ü© (Œò ::L (w , G A)) ‚à£ Œì ‚ä¢LL Œî ‚à£ Œ®

    LL-HR : ‚àÄ{Gr : Graph}{Œò : I-Ctx}{Œì : BiL-LCtx}{Œî : BiL-RCtx}{Œ® : C-Ctx}{w : World}{A : BiL-Form}
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ Œì ‚ä¢LL ((w , A) ::R Œî) ‚à£ Œ®
      ‚Üí ‚ü® Gr ‚ü© Œò ‚à£ Œì ‚ä¢LL Œî ‚à£ ((w , H A) ::R Œ®)
